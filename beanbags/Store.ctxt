#BlueJ class context
comment0.params=
comment0.target=Store()
comment0.text=\ \ Constructor\n
comment1.params=
comment1.target=ObjectArrayList\ getBeanBagsArray()
comment1.text=\ \ Getters\ and\ Setters\n
comment10.params=reservationNumber
comment10.target=void\ sellBeanBags(int)
comment11.params=
comment11.target=int\ beanBagsInStock()
comment12.params=
comment12.target=int\ reservedBeanBagsInStock()
comment13.params=id
comment13.target=int\ beanBagsInStock(java.lang.String)
comment14.params=filename
comment14.target=void\ saveStoreContents(java.lang.String)
comment15.params=filename
comment15.target=void\ loadStoreContents(java.lang.String)
comment16.params=
comment16.target=int\ getNumberOfDifferentBeanBagsInStock()
comment17.params=
comment17.target=int\ getNumberOfSoldBeanBags()
comment18.params=id
comment18.target=int\ getNumberOfSoldBeanBags(java.lang.String)
comment19.params=
comment19.target=int\ getTotalPriceOfSoldBeanBags()
comment2.params=id\ name\ manufacturer\ information\ num
comment2.target=BeanBag\ findBeanBag(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment2.text=\n\ Retrieve\ a\ BeanBag\ object\ from\ Storage\ based\ on\ ID,\ ensuring\ that\ the\ name,\ manufacturer\ and\ free\ text\ncomponent\ are\ the\ same,\ otherwise\ create\ a\ new\ BeanBag\n\ \n\ @param\ id\ \ \ \ bean\ bag\ ID\ to\ search\ for\n\ @param\ name\ \ \ \ bean\ bag\ name\ to\ search\ for\n\ @param\ manufacturer\ \ \ \ bean\ bag\ manufacturer\ to\ search\ for\n\ @param\ information\ \ \ \ bean\ bag\ information\ to\ search\ for\n
comment20.params=id
comment20.target=int\ getTotalPriceOfSoldBeanBags(java.lang.String)
comment21.params=
comment21.target=int\ getTotalPriceOfReservedBeanBags()
comment22.params=id
comment22.target=java.lang.String\ getBeanBagDetails(java.lang.String)
comment23.params=
comment23.target=void\ empty()
comment24.params=
comment24.target=void\ resetSaleAndCostTracking()
comment25.params=oldId\ replacementId
comment25.target=void\ replace(java.lang.String,\ java.lang.String)
comment3.params=id\ name\ manufacturer\ num
comment3.target=BeanBag\ findBeanBag(java.lang.String,\ java.lang.String,\ java.lang.String,\ int)
comment3.text=\n\ Retrieve\ a\ BeanBag\ object\ from\ Storage\ based\ on\ ID,\ ensuring\ that\ the\ name,\ manufacturer\ and\ free\ text\ncomponent\ are\ the\ same,\ otherwise\ create\ a\ new\ BeanBag\n\ \n\ @param\ id\ \ \ \ bean\ bag\ ID\ to\ search\ for\n\ @param\ name\ \ \ \ bean\ bag\ name\ to\ search\ for\n\ @param\ manufacturer\ \ \ \ bean\ bag\ manufacturer\ to\ search\ for\n
comment4.params=num\ manufacturer\ name\ id\ year\ month
comment4.target=void\ addBeanBags(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ short,\ byte)
comment4.text=\n\ Method\ adds\ bean\ bags\ to\ the\ store\ with\ the\ arguments\ as\ bean\ bag\ details.\n\ <p>\n\ The\ state\ of\ this\ BeanBagStore\ must\ be\ be\ unchanged\ if\ any\ exceptions\ are\n\ thrown.\n\n\ @param\ num\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\ of\ bean\ bags\ added\n\ @param\ manufacturer\ \ \ \ \ \ bean\ bag\ manufacturer\n\ @param\ name\ \ \ \ \ \ \ \ \ \ \ \ \ \ bean\ bag\ name\n\ @param\ id\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ID\ of\ bean\ bag\n\ @param\ year\ \ \ \ \ \ \ \ \ \ \ \ \ \ year\ of\ manufacture\n\ @param\ month\ \ \ \ \ \ \ \ \ \ \ \ \ month\ of\ manufacture\n\ @param\ information\ \ \ \ \ \ \ free\ text\ detailing\ bean\ bag\ information\n\ @throws\ IllegalNumberOfBeanBagsAddedException\ \ \ if\ the\ number\ to\ be\ added\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ is\ less\ than\ 1\n\ @throws\ BeanBagMismatchException\ if\ the\ id\ already\ exists\ in\ the\ store,\ but\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ other\ stored\ elements\ (manufacturer,\ name\ and\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ free\ text)\ do\ not\ match\n\ @throws\ IllegalIDException\ \ \ if\ the\ ID\ is\ not\ a\ positive\ eight\ character\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ hexadecimal\ number\n\ @throws\ InvalidMonthException\ \ \ \ if\ the\ month\ is\ not\ in\ the\ range\ 1\ to\ 12\n
comment5.params=num\ manufacturer\ name\ id\ year\ month\ information
comment5.target=void\ addBeanBags(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ short,\ byte,\ java.lang.String)
comment6.params=id\ priceInPence
comment6.target=void\ setBeanBagPrice(java.lang.String,\ int)
comment7.params=num\ id
comment7.target=void\ sellBeanBags(int,\ java.lang.String)
comment8.params=quantity\ id
comment8.target=int\ reserveBeanBags(int,\ java.lang.String)
comment8.text=\n\ \ \ Reserve\ some\ beanbags\n\n\ \ \ @param\ quantity\ \ \ \ \ Number\ of\ bags\ to\ reserve\n\ \ \ @param\ id\ \ \ \ \ \ \ \ \ \ \ Model\ ID\ of\ bag\ to\ reserve\n\n\ \ \ @throws\ BeanBagNotInStockException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ bean\ bag\ has\ previously\ been\ in\ stock,\ but\ is\ now\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out\ of\ stock\n\ \ \ @throws\ InsufficientStockException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ bean\ bag\ is\ in\ stock,\ but\ not\ enough\ are\ available\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ meet\ the\ reservation\ demand\n\ \ \ @throws\ IllegalNumberOfBeanBagsReservedException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ number\ of\ bean\ bags\ requested\ to\ reserve\ is\ fewer\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ than\ 1\n\ \ \ @throws\ PriceNotSetException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ bag\ is\ in\ stock,\ and\ there\ is\ sufficient\ stock\ to\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ meet\ demand,\ but\ the\ price\ has\ yet\ to\ be\ set\n\ \ \ @throws\ BeanBagIDNotRecognisedException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ ID\ does\ not\ match\ any\ bag\ in\ (or\ previously\ in)\ stock\n\ \ \ @throws\ IllegalIDException\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ If\ the\ ID\ is\ not\ a\ positive\ eight\ character\ hexadecimal\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ number\n
comment9.params=reservationNumber
comment9.target=void\ unreserveBeanBags(int)
numComments=26
